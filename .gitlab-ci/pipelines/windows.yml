variables:
  TARGET_PLATFORM: 'windows'

windows / build:
  stage: build
  tags:
    - windows-shell
  script:
    - cmake -S . -B ${BUILD_PATH} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Debug
    - $cpuCount = (Get-WmiObject -Class Win32_Processor).NumberOfLogicalProcessors - 1
    - cmake --build ${BUILD_PATH} -- -j ${cpuCount}
    - Copy-Item -Path ${BUILD_PATH}\gcrypt\out\lib\*.dll, ${BUILD_PATH}\gcrypt\out\bin\*.dll, ${BUILD_PATH}\gpg_error\out\lib\*.dll, ${BUILD_PATH}\gpg_error\out\bin\*.dll -Destination ${BUILD_PATH}
  artifacts:
    paths:
      - $BUILD_PATH/client.exe
      - $BUILD_PATH/injector.exe
      - $BUILD_PATH/lib*
      - $BUILD_PATH/test/test-*
      - $BUILD_PATH/test/bt-*
    expire_in: 6h
  needs:
    []

windows / unit-test:
  stage: test
  tags:
    - windows-shell
  artifacts:
    paths:
      - $BUILD_PATH/client.exe
      - $BUILD_PATH/injector.exe
      - $BUILD_PATH/lib*
      - $BUILD_PATH/test/test-*
    expire_in: 6h
  script:
    - $env:PATH = "${CI_PROJECT_DIR}\${BUILD_PATH};$env:PATH"
    - $testFiles = Get-ChildItem -Path "${BUILD_PATH}\test" -Filter "test-*"
    - $testsFailed = $false
    - foreach ($test in $testFiles) { & $test.FullName --log_level=test_suite; if (-not $?) { $testsFailed = $true }}
    - echo $testsFailed
    - if ($testsFailed) { exit 1 }
  needs:
    ['windows / build']
