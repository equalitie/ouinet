include:
  - .gitlab-ci/jobs/common/prepare-builder-image.yml
  - .gitlab-ci/jobs/linux.yml

variables:
  TARGET_PLATFORM: 'linux'
  BUILDER_IMAGE: '$CI_REGISTRY_IMAGE:$TARGET_PLATFORM-builder'

linux / prepare-builder-image:
  variables:
    TARGET_PLATFORM: 'linux'
  extends:
    .prepare-builder-image

linux / build:
  variables:
    TARGET_PLATFORM: 'linux'
    BOOST_VERSION: "1.87.0"
    CMAKE_VERSION: "3.31.7-linux-x86_64"
  extends:
    .linux-build
  needs:
    - job: 'linux / prepare-builder-image'
      optional: true

linux / unit-cpp-test:
  variables:
    TARGET_PLATFORM: 'linux'
  extends:
    .linux-unit-cpp-test
  needs:
    ['linux / build']

linux / unit-rust-test:
  variables:
    TARGET_PLATFORM: 'linux'
  extends:
    .linux-unit-rust-test
  needs:
    ['linux / build']

linux / integration-test:
  variables:
    TARGET_PLATFORM: 'linux'
  extends:
    .linux-integration-test
  needs:
    ['linux / unit-rust-test', 'linux / unit-cpp-test']
  before_script:
    - ln -s /usr/bin/python3 /usr/bin/python

linux / build-asan:
  variables:
    TARGET_PLATFORM: 'linux'
    BUILD_PATH: 'build/$TARGET_PLATFORM-asan'
    BOOST_VERSION: "1.87.0"
    CMAKE_VERSION: "3.31.7-linux-x86_64"
    WITH_ASAN: "ON"
  extends:
    .linux-build
  needs:
    - job: 'linux / build'
      optional: true
  when: manual
  allow_failure: true

linux / unit-cpp-asan-test:
  variables:
    TARGET_PLATFORM: 'linux'
    BUILD_PATH: 'build/$TARGET_PLATFORM-asan'
  extends:
    .linux-unit-cpp-test
  needs:
    ['linux / build-asan']
  allow_failure: true

linux / build-release:
  variables:
    TARGET_PLATFORM: 'linux'
    BUILD_PATH: 'build/$TARGET_PLATFORM-release'
    BUILD_TYPE: "Release"
    BOOST_VERSION: "1.87.0"
    CMAKE_VERSION: "3.31.7-linux-x86_64"
    WITH_ASAN: "OFF"
  extends:
    .linux-build
  needs:
    - job: 'linux / build'
      optional: true
  when: manual
  allow_failure: true

linux / unit-cpp-release-test:
  variables:
    TARGET_PLATFORM: 'linux'
    BUILD_PATH: 'build/$TARGET_PLATFORM-release'
  extends:
    .linux-unit-cpp-test
  needs:
    ['linux / build-release']
  allow_failure: true

linux / build-prod-image:
  stage: release
  tags:
    - shell
  needs: ['linux / integration-test']
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login --password-stdin -u $CI_REGISTRY_USER $CI_REGISTRY
    - docker build --pull --target base -t $CI_REGISTRY_IMAGE:latest - < Dockerfile
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker logout $CI_REGISTRY
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
      allow_failure: true
