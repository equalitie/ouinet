include: .gitlab-ci/jobs/prepare-builder-image.yml
include: .gitlab-ci/jobs/linux.yml

variables:
  PIPELINE_NAME: "linux-builder" 
  BUILD_PATH: "build/linux-builder"

linux / prepare-builder-image:
  extends:
    .prepare-builder-image
  variables:
    CI_REGISTRY_IMAGE_TAG: "linux-builder"

linux / build:
  extends:
    .linux-build
  needs: ['linux / prepare-builder-image']
  image: registry.gitlab.com/equalitie/ouinet:linux-builder

linux / unit-test:
  stage: test
  tags:
    - docker
    - ptrace
  needs: ['linux / build']
  image: registry.gitlab.com/equalitie/ouinet:linux-builder
  script:
    - export LD_LIBRARY_PATH=$PWD/build:/usr/local/lib
    - for test in ./build/test/test-*; do "$test" --log_level=test_suite; done

linux / integration-test:
  stage: test
  tags:
    - docker
  needs: ['linux / build']
  image: registry.gitlab.com/equalitie/ouinet:linux-builder
  script:
    - export LD_LIBRARY_PATH=$PWD/build:/usr/local/lib
    - export OUINET_BUILD_DIR=$PWD/build
    - ./scripts/run_integration_tests.sh

linux / build-prod-image:
  stage: release
  tags:
    - shell
  needs: ['linux / unit-test', 'linux / integration-test']
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --pull --target base -t $CI_REGISTRY_IMAGE:latest - < Dockerfile
    - docker push $CI_REGISTRY_IMAGE:latest

