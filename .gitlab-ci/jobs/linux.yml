variables:
  TARGET_PLATFORM: 'linux'
  BUILD_PATH: 'build/$TARGET_PLATFORM'
  BUILDER_IMAGE: '$CI_REGISTRY_IMAGE:$TARGET_PLATFORM-builder'

.linux-build:
  stage: build
  tags:
    - docker
  image: $BUILDER_IMAGE
  artifacts:
    paths:
      - $BUILD_PATH/boost/install/include
      - $BUILD_PATH/client
      - $BUILD_PATH/injector
      - $BUILD_PATH/lib*.so
      - $BUILD_PATH/lib*.so.*
      - $BUILD_PATH/test/bt-*
      - $BUILD_PATH/test/test-*
    expire_in: 6h
  cache:
    key: single
    paths:
      - $BUILD_PATH/modules/*/go-workspace
      - $BUILD_PATH/src/ouiservice/lampshade/go-workspace
  script:
    - mkdir -p $BUILD_PATH
    - cd $BUILD_PATH
    - cmake $CI_PROJECT_DIR -DBOOST_VERSION=$BOOST_VERSION
    - cmake --build . -j `nproc`

.linux-unit-cpp-test:
  stage: test
  tags:
    - docker
    - ptrace
  artifacts:
    paths:
      - $BUILD_PATH/client
      - $BUILD_PATH/injector
      - $BUILD_PATH/lib*.so
      - $BUILD_PATH/lib*.so.*
      - $BUILD_PATH/test/test-*
    expire_in: 6h
  image: $BUILDER_IMAGE
  script:
    - export LD_LIBRARY_PATH=$CI_PROJECT_DIR/$BUILD_PATH:/usr/local/lib
    - for test in ./$BUILD_PATH/test/test-*; do "$test" --log_level=test_suite; done

.linux-unit-rust-test:
  stage: test
  tags:
    - docker
    - ptrace
  artifacts:
    paths:
      - $BUILD_PATH/boost/install/include
      - $BUILD_PATH/libboost_asio.so
    expire_in: 1h
  image: $BUILDER_IMAGE
  script:
    - export RUST_LOG=ouinet_rs=debug
    - export CXXFLAGS="-I$CI_PROJECT_DIR/$BUILD_PATH/boost/install/include"
    # For the linker to find libboost_asio.so
    - export LIBRARY_PATH="$CI_PROJECT_DIR/$BUILD_PATH"
    # For when the test executable is ran
    - export LD_LIBRARY_PATH="$CI_PROJECT_DIR/$BUILD_PATH"
    - cargo test --manifest-path ./rust/Cargo.toml -- --nocapture

.linux-integration-test:
  stage: test
  tags:
    - docker
  image: $BUILDER_IMAGE
  script:
    - export LD_LIBRARY_PATH=$CI_PROJECT_DIR/$BUILD_PATH:/usr/local/lib
    - export OUINET_BUILD_DIR=$CI_PROJECT_DIR/$BUILD_PATH
    - ./scripts/run_integration_tests.sh

