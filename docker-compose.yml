# Environment variables:
#
#   - OUINET_VERSION: Optional version tag (default 'latest').
#   - OUINET_ROLE: Optional node role: 'injector' or 'client' (default).
#   - OUINET_MEM_LIMIT: Optional memory limit (default '8g'),
#     may require the ``--compatibility`` option (see below).
#
# Usage example for client (with default environment file):
#
#     $ echo COMPOSE_PROJECT_NAME=ouinet-client >> .env  # optional
#     $ echo OUINET_ROLE=client >> .env  # optional
#     $ docker-compose up
#
# To run a shell on its data volume:
#
#     $ docker-compose run --rm shell
#

version: '3'

services:
  shell:
    image: busybox
    volumes:
      - data:/var/opt/ouinet
    network_mode: none
    # This leaves the user at the right place when running a shell.
    working_dir: /var/opt/ouinet
    # The shell just exits successfully on up or start.

  node:
    image: "equalitie/ouinet:${OUINET_VERSION:-latest}"
    volumes:
      - data:/var/opt/ouinet
    # Host networking is preferred over port forwarding
    # if running on a Linux host (especially for injectors).
    # Otherwise see below.
    network_mode: host
    # If you get "connection refused" errors when
    # accessing the client's HTTP proxy at ``127.0.0.1:8077``,
    # your computer may not support Docker host networking.
    # Comment the line above and uncomment the ones below
    # to enable port forwarding.
    #
    #network_mode: bridge
    #ports:
    #  - "127.0.0.1:8077:8077"  # client HTTP proxy
    #
    # Also run the command below in the shell container
    # to modify ``listen-on-*`` options to use ``0.0.0.0``:
    #
    #     sed -E 's/(^listen-on-\S+\s*=\s*)127.0.0.1(:.*)/\10.0.0.0\2/' */ouinet-*.conf
    #
    command: ["${OUINET_ROLE:-client}"]
    # The service will be restarted (also on reboot)
    # until it is manually stopped.
    restart: unless-stopped
    # These do not work for non-swarm deployments
    # unless you use the ``--compatibility`` option,
    # see <https://github.com/docker/compose/issues/4513>
    # and <https://github.com/docker/compose/pull/5684>.
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 30s
      resources:
        limits:
          memory: "${OUINET_MEM_LIMIT:-8g}"

volumes:
  data:
